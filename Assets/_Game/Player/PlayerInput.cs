//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Game/Player/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""a3165d33-a947-4e4f-925a-22b1ea329a49"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b5d26df2-faa2-45ad-9555-a05c74ae3ce9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch"",
                    ""type"": ""Button"",
                    ""id"": ""4af363ea-fe6a-40e9-8f03-256bc55ab006"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch1Position"",
                    ""type"": ""Value"",
                    ""id"": ""f89e21a9-0ac0-41fa-9f49-28460faa2c6b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch2Position"",
                    ""type"": ""Value"",
                    ""id"": ""54dd5bf2-a870-4729-b69e-7df91f0224fe"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touch1Press"",
                    ""type"": ""Button"",
                    ""id"": ""248c26b6-34a3-43d1-8a77-633dc15100d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touch2Press"",
                    ""type"": ""Button"",
                    ""id"": ""cf02f03c-d6c7-47c1-a2bc-2852bc58bece"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MyScroll"",
                    ""type"": ""Value"",
                    ""id"": ""0538ef6f-8f9b-4fbe-91eb-be4f09132ddd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5aa05a2d-209d-422e-a194-a7a1295039fc"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11a7c9bd-afba-4042-bf27-534e38389a11"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9c3a725-a527-4c77-8817-dfc5130d2742"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch2Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bd9b5c8-11bb-4b52-b858-3f12378747bf"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d5b017b-4604-4622-8cc3-835b84eb6a3b"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch2Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3340c0b5-1a2e-453d-b664-4274532b1d11"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""795e40d4-9bfb-4794-8d9f-88fd8e54a742"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=80,y=80)"",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1ad1006e-7263-4996-ab24-b80c8626995d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=80,y=80)"",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""39e291da-46f1-4398-af47-35570b2c66c6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""84a6b5b1-f769-40a6-94b7-8396d31674ef"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2790b71e-1dc0-4bfd-bc8b-a5c50e3c22cb"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3dc3d63b-f5d5-4788-a4ab-196c1cb666c7"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MyScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6242e644-396b-4ac7-a7f7-08e964941ed2"",
                    ""path"": ""<Touchscreen>/touch0/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch1Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Touch = m_Player.FindAction("Touch", throwIfNotFound: true);
        m_Player_Touch1Position = m_Player.FindAction("Touch1Position", throwIfNotFound: true);
        m_Player_Touch2Position = m_Player.FindAction("Touch2Position", throwIfNotFound: true);
        m_Player_Touch1Press = m_Player.FindAction("Touch1Press", throwIfNotFound: true);
        m_Player_Touch2Press = m_Player.FindAction("Touch2Press", throwIfNotFound: true);
        m_Player_MyScroll = m_Player.FindAction("MyScroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Touch;
    private readonly InputAction m_Player_Touch1Position;
    private readonly InputAction m_Player_Touch2Position;
    private readonly InputAction m_Player_Touch1Press;
    private readonly InputAction m_Player_Touch2Press;
    private readonly InputAction m_Player_MyScroll;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Touch => m_Wrapper.m_Player_Touch;
        public InputAction @Touch1Position => m_Wrapper.m_Player_Touch1Position;
        public InputAction @Touch2Position => m_Wrapper.m_Player_Touch2Position;
        public InputAction @Touch1Press => m_Wrapper.m_Player_Touch1Press;
        public InputAction @Touch2Press => m_Wrapper.m_Player_Touch2Press;
        public InputAction @MyScroll => m_Wrapper.m_Player_MyScroll;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Touch.started += instance.OnTouch;
            @Touch.performed += instance.OnTouch;
            @Touch.canceled += instance.OnTouch;
            @Touch1Position.started += instance.OnTouch1Position;
            @Touch1Position.performed += instance.OnTouch1Position;
            @Touch1Position.canceled += instance.OnTouch1Position;
            @Touch2Position.started += instance.OnTouch2Position;
            @Touch2Position.performed += instance.OnTouch2Position;
            @Touch2Position.canceled += instance.OnTouch2Position;
            @Touch1Press.started += instance.OnTouch1Press;
            @Touch1Press.performed += instance.OnTouch1Press;
            @Touch1Press.canceled += instance.OnTouch1Press;
            @Touch2Press.started += instance.OnTouch2Press;
            @Touch2Press.performed += instance.OnTouch2Press;
            @Touch2Press.canceled += instance.OnTouch2Press;
            @MyScroll.started += instance.OnMyScroll;
            @MyScroll.performed += instance.OnMyScroll;
            @MyScroll.canceled += instance.OnMyScroll;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Touch.started -= instance.OnTouch;
            @Touch.performed -= instance.OnTouch;
            @Touch.canceled -= instance.OnTouch;
            @Touch1Position.started -= instance.OnTouch1Position;
            @Touch1Position.performed -= instance.OnTouch1Position;
            @Touch1Position.canceled -= instance.OnTouch1Position;
            @Touch2Position.started -= instance.OnTouch2Position;
            @Touch2Position.performed -= instance.OnTouch2Position;
            @Touch2Position.canceled -= instance.OnTouch2Position;
            @Touch1Press.started -= instance.OnTouch1Press;
            @Touch1Press.performed -= instance.OnTouch1Press;
            @Touch1Press.canceled -= instance.OnTouch1Press;
            @Touch2Press.started -= instance.OnTouch2Press;
            @Touch2Press.performed -= instance.OnTouch2Press;
            @Touch2Press.canceled -= instance.OnTouch2Press;
            @MyScroll.started -= instance.OnMyScroll;
            @MyScroll.performed -= instance.OnMyScroll;
            @MyScroll.canceled -= instance.OnMyScroll;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnTouch(InputAction.CallbackContext context);
        void OnTouch1Position(InputAction.CallbackContext context);
        void OnTouch2Position(InputAction.CallbackContext context);
        void OnTouch1Press(InputAction.CallbackContext context);
        void OnTouch2Press(InputAction.CallbackContext context);
        void OnMyScroll(InputAction.CallbackContext context);
    }
}
